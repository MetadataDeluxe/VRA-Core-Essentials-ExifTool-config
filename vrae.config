#------------------------------------------------------------------------------
# File:         vrae.config
#
# Description:  This is an ExifTool config file to read and write VRA Core Essentials XMP embedded metadata.
#               VRA Essentials is made up select VRA Core properties adapted to the Adobe XMP embedded metadata specification.
#               The prefered XMP prefix is "vrae" and the namespace is http://www.vraweb.org/vracore/4.0/essential/ 

# Usage:        exiftool -config vrae.config -xmp-vrae:...
#
# Requires:     ExifTool version 10.70 or later
#
# Revisions:    2022/07/03
# Version:		1.2
#------------------------------------------------------------------------------

# The %Image::ExifTool::UserDefined hash defines new tags to be added
# to existing tables.
%Image::ExifTool::UserDefined = (
    'Image::ExifTool::XMP::Main' => {
        vrae => {
            SubDirectory => {
                TagTable => 'Image::ExifTool::UserDefined::vrae',
            },
        },
    },
);

# define vrae namespace and properties
%Image::ExifTool::UserDefined::vrae = (
    GROUPS => { 0 => 'XMP', 1 => 'XMP-vrae', 2 => 'Image' },
    NAMESPACE => { 'vrae' => 'http://www.vraweb.org/vracore/4.0/essential/' },
    WRITABLE => 'string', # (default to string-type tags)
	
	# VRA Collection tags (an aggregate of Work and Image objects)
	'collection.refid' => { Name => 'CollectionRefid', Writable => 'string' },
	
	'collection.href' => { Name => 'CollectionHref', Writable => 'string' },
	
	'collection.source' => { Name => 'CollectionSource', Writable => 'string' },
	
	# collection name - use dc:publisher exiftool Name => 'Publisher' 
	
	# VRA Work tags (a built or created object)
	'work.metadataDate' => { Name => 'WorkMetadataDate', Writable => 'string' },	
	
	'work.metadataId' => { Name => 'WorkMetadataId', Writable => 'string' },
	
	'work.metadataSource' => { Name => 'WorkMetadataSource', Writable => 'string' },
	
	'work.metadataHref' => { Name => 'WorkMetadataHref', Writable => 'string' },
	
	'work.refid' => { Name => 'WorkRefid', Writable => 'string' },
	
	'work.href' => { Name => 'WorkHref', Writable => 'string' },
	
	# display (simple text)
	'work.agent' => { Name => 'WorkAgent', Writable => 'string' }, # the period in 'work.agent' is not allowed in ExifTool Tag Name, need to define a Name without the period, e.g., workAgent
	
	# indexed (seq array of structures)
	'work.agentIndexed' => { 
		Name => 'WorkAgentIndexed',
		List => 'Seq',
		Struct => {
			attribution => { Writable => 'string' },
			extent => { Writable => 'string' },
			dateType => { Writable => 'string' },
			dateEarliest => { Writable => 'string' },
			dateLatest => { Writable => 'string' },	
			culture => {
				List => 'Seq', # agents can have multiple cultures
				Struct => {
					value => { Writable => 'string' },
					vocab => { Writable => 'string' },
					refid => { Writable => 'string' },
					href => { Writable => 'string' },
					source=> { Writable => 'string' },
				},
			},			
			name => { Writable => 'string' },
			nameHref => { Writable => 'string' },			
			nameRefid => { Writable => 'string' },
			nameSource => { Writable => 'string' },
			nameType=> { Writable => 'string' },
			nameVocab => { Writable => 'string' },			
			role => {
				List => 'Seq', # agents can have multiple roles
				Struct => {
					value => { Writable => 'string' },
					vocab => { Writable => 'string' },
					refid => { Writable => 'string' },
					href => { Writable => 'string' },
					source=> { Writable => 'string' },
				},
			},
			source => { Writable => 'string' },
		},
	},
	
	'work.culturalContext' => { Name => 'WorkCulturalContext', Writable => 'string' },
	
	'work.culturalContextIndexed' => {
		Name => 'WorkCulturalContextIndexed',
		List => 'Seq',
		Struct => {
			value => { Writable => 'string' },
			vocab => { Writable => 'string' },
			refid => { Writable => 'string' },
			href => { Writable => 'string' },
			extent => { Writable => 'string' },
			source => { Writable => 'string' },
		},
	},
	
	'work.date' => { Name => 'WorkDate', Writable => 'string' },
	
	'work.dateIndexed' => { 
		Name => 'WorkDateIndexed',
		List => 'Seq',
		Struct => {
			type => { Writable => 'string' },
			earliestDate => { Writable => 'string' },
			latestDate => { Writable => 'string' },
			extent=> { Writable => 'string' },
			source=> { Writable => 'string' },
		},
	},

	'work.description' => { Name => WorkDescription, Writable => 'string' },
	
	'work.descriptionIndexed' => {
		Name =>	'WorkDescriptionIndexed',
		List => 'Seq',
		Struct => {
			value => { Writable => 'string' },
			lang => { Writable => 'string' },
			refid => { Writable => 'string' },
			href => { Writable => 'string' },
			extent => { Writable => 'string' },
			source => { Writable => 'string' },
		},
	},
	
	'work.inscription' => { Name => WorkInscription, Writable => 'string' },
	
	'work.inscriptionIndexed' => {
		Name =>	'WorkInscriptionIndexed',
		List => 'Seq',
		Struct => {
			text => { Writable => 'string' },
			textType => { Writable => 'string' },
			textSource => { Writable => 'string' },
			lang => { Writable => 'string' },
			position => { Writable => 'string' },
			extent => { Writable => 'string' },
			author => { Writable => 'string' },
			authorVocab => { Writable => 'string' },
			authorRefid => { Writable => 'string' },
			authorHref => { Writable => 'string' },
			authorSource => { Writable => 'string' },
		},
	},
	
	# Deprecated flat work locations. It is preferred to use 'work.location' for display value and 'work.locationIndexed'
	# -------------------------------------------------------------------------------------------------------------------
	'work.locationCreation' => { Name => WorkLocationCreation, Writable => 'string' },
	'work.locationDiscovery' => { Name => WorkLocationDiscovery, Writable => 'string' },
	'work.locationExhibition' => { Name => WorkLocationExhibition, Writable => 'string' },
	'work.locationFormerOwner' => { Name => WorkLocationFormerOwner, Writable => 'string' },
	'work.locationFormerRepository' => { Name => WorkLocationFormerRepository, Writable => 'string' },
	'work.locationFormerSite' => { Name => WorkLocationFormerSite, Writable => 'string' },
	'work.locationInstallation' => { Name => WorkLocationInstallation, Writable => 'string' },
	'work.locationIntended' => { Name => WorkLocationIntended, Writable => 'string' },
	'work.locationOther' => { Name => WorkLocationOther, Writable => 'string' },
	'work.locationOwner' => { Name => WorkLocationOwner, Writable => 'string' },
	'work.locationPerformance' => { Name => WorkLocationPerformance, Writable => 'string' },
	'work.locationPublication' => { Name => WorkLocationPublication, Writable => 'string' },
	'work.locationRepository' => { Name => WorkLocationRepository, Writable => 'string' },
	'work.locationSite' => { Name => WorkLocationSite, Writable => 'string' },
	# -------------------------------------------------------------------------------------------------------------------
	
	'work.location' => { Name => WorkLocation, Writable => 'string' },
	
	'work.locationNotes' => { Name => WorkLocationNotes, Writable => 'string' },
		
	'work.locationIndexed' => {
		Name =>	'WorkLocationIndexed',
		List => 'Seq',
		Struct => {
			type => { Writable => 'string' },
			name => { Writable => 'string' },
			nameVocab => { Writable => 'string' },
			nameHref => { Writable => 'string' },
			nameRefid => { Writable => 'string' },
			nameType => { Writable => 'string' },
			refid => { Writable => 'string' },
			refidType => { Writable => 'string' },
			geo => { Writable => 'string' },
			geoVocab => { Writable => 'string' },
			geoRefid => { Writable => 'string' },
			geoHref => { Writable => 'string' },
			geoExtent => { Writable => 'string' },
		},
	},

	'work.material' => { Name => WorkMaterial, Writable => 'string' },
	
	'work.materialIndexed' => {
		Name =>	'WorkMaterialIndexed',
		List => 'Seq',
		Struct => {
			value => { Writable => 'string' },
			vocab => { Writable => 'string' },
			refid => { Writable => 'string' },
			href=> { Writable => 'string' },
			extent => { Writable => 'string' },
			source => { Writable => 'string' },
		},
	},
	
	'work.measurements' => { Name => WorkMeasurements, Writable => 'string' },
	
	'work.measurementsIndexed' => {
		Name =>	'WorkMeasurementsIndexed',
		List => 'Seq',
		Struct => {
			unit => { Writable => 'string' },
			extent => { Writable => 'string' },
			rules => { Writable => 'string' },
			source => { Writable => 'string' },		
			measurements => {
				List => 'Seq', # agents can have multiple roles
				Struct => {
					value => { Writable => 'string' },	
					type => { Writable => 'string' },
					},
				},
			},
		},
	
	'work.relation' => { Name => WorkRelation, Writable => 'string' },
	
	'work.relationIndexed' => {
		Name =>	'WorkRelationIndexed',
		List => 'Seq',
		Struct => {
			value => { Writable => 'string' },
			type => { Writable => 'string' },
			relids => { Writable => 'string' },
			href => { Writable => 'string' },
			refid => { Writable => 'string' },
			source => { Writable => 'string' },
		},
	},
	
	'work.rights' => { Name => WorkRights, Writable => 'string' },
	
	'work.rightsIndexed' => {
		Name =>	'WorkRightsIndexed',
		List => 'Seq',
		Struct => {
			type => { Writable => 'string' },
			extent => { Writable => 'string' },
			refid => { Writable => 'string' },
			href => { Writable => 'string' },
			text => { Writable => 'string' },
			lang => { Writable => 'string' },
			textVocab => { Writable => 'string' },
			textHref => { Writable => 'string' },
			holder => { Writable => 'string' },
			holderVocab => { Writable => 'string' },
			holderRefid => { Writable => 'string' },
			holderHref => { Writable => 'string' },
			notes => { Writable => 'string' },
		},
	},
	
	'work.source ' => { Name => WorkSource, Writable => 'string' },
	
	'work.sourceIndexed' => {
		Name =>	'WorkSourceIndexed',
		List => 'Seq',
		Struct => {
			extent => { Writable => 'string' },
			refid => { Writable => 'string' },
			refidType => { Writable => 'string' },
			href => { Writable => 'string' },
			value => { Writable => 'string' },
			type => { Writable => 'string' },
			nameVocab => { Writable => 'string' },
			nameRefid => { Writable => 'string' },
			nameHref => { Writable => 'string' },
		},
	},
	
	'work.stateEdition' => { Name => WorkStateEdition, Writable => 'string' },

	'work.stateEditionIndexed' => {
		Name =>	'WorkStateEditionIndexed',
		List => 'Seq',
		Struct => {
			type => { Writable => 'string' },
			number => { Writable => 'string' },
			count => { Writable => 'string' },
			name => { Writable => 'string' },
			description => { Writable => 'string' },
			refid => { Writable => 'string' },
			href => { Writable => 'string' },
			source => { Writable => 'string' },
		},
	},
	
	'work.stylePeriod' => { Name => WorkStylePeriod, Writable => 'string' },
	
	'work.stylePeriodIndexed' => {
		Name =>	'WorkStylePeriodIndexed',
		List => 'Seq',
		Struct => {
			value => { Writable => 'string' },
			vocab => { Writable => 'string' },
			refid => { Writable => 'string' },
			href => { Writable => 'string' },
			extent => { Writable => 'string' },
			source => { Writable => 'string' },
		},
	},	
	
	'work.subject' => { Name => WorkSubject, Writable => 'string' },
	
	'work.subjectIndexed' => {
		Name =>	'WorkSubjectIndexed',
		List => 'Seq',
		Struct => {
			value => { Writable => 'string' },
			type => { Writable => 'string' },
			lang => { Writable => 'string' },
			extent => { Writable => 'string' },
			rules => { Writable => 'string' },
			source => { Writable => 'string' },
			vocab => { Writable => 'string' },
			refid => { Writable => 'string' },
			href => { Writable => 'string' },
		},
	},

	'work.technique' => { Name => WorkTechnique, Writable => 'string' },
	
	'work.techniqueIndexed' => {
		Name =>	'WorkTechniqueIndexed',
		List => 'Seq',
		Struct => {
			value => { Writable => 'string' },
			vocab => { Writable => 'string' },
			refid => { Writable => 'string' },
			href => { Writable => 'string' },
			lang => { Writable => 'string' },
			extent => { Writable => 'string' },
			source => { Writable => 'string' },
		},
	},

	'work.textref ' => { Name => WorkTextref, Writable => 'string' },
	
	'work.textrefIndexed' => {
		Name =>	'WorkTextrefIndexed',
		List => 'Seq',
		Struct => {
			name => { Writable => 'string' },
			nameType => { Writable => 'string' },
			refid => { Writable => 'string' },
			refidType => { Writable => 'string' },
			href => { Writable => 'string' },
			extent => { Writable => 'string' },
			source => { Writable => 'string' },
		},
	},

	'work.title ' => { Name => WorkTitle, Writable => 'string' },
	
	'work.titleIndexed' => {
		Name =>	'WorkTitleIndexed',
		List => 'Seq',
		Struct => {
			value => { Writable => 'string' },
			type => { Writable => 'string' },
			lang => { Writable => 'string' },
			pref => { Writable => 'string' },
			relids => { Writable => 'string' },
			href => { Writable => 'string' },
			vocab => { Writable => 'string' },
			refid => { Writable => 'string' },
			source => { Writable => 'string' },
		},
	},

	'work.worktype' => { Name => WorkWorktype, Writable => 'string' },
	
	'work.worktypeIndexed' => {
		Name =>	'WorkWorktypeIndexed',
		List => 'Seq',
		Struct => {
			value => { Writable => 'string' },
			vocab => { Writable => 'string' },
			refid => { Writable => 'string' },
			href => { Writable => 'string' },
			extent => { Writable => 'string' },
			source => { Writable => 'string' },
		},
	},
	
	# VRA Image tags (a visual surrogate of a built or created object [Work])
	#------------------------------------------------------------------------------
	# These VRA Image elements are mapped to IPTC tags
	# Image Agent (display) = dc:creator
	# Image Agent Role = photoshop:AuthorsPosition
	# Image Date = photoshop:DateCreated		
	# Image Rights Type = xmpRights:marked		
	# Image Rights Holder Name = plus:CopyrightOwner[1]/plus:CopyrightOwnerName		
	# Image Rights Text = photoshop:Credit		
	# Image Rights Href = xmpRights:WebStatement		
	# Image Rights Notes = photoshop:Instructions		
	#------------------------------------------------------------------------------
	
	'image.metadataDate' => { Name => 'ImageMetadataDate', Writable => 'string' },	
	
	'image.metadataId' => { Name => 'ImageMetadataId', Writable => 'string' },
	
	'image.metadataSource' => { Name => 'ImageMetadataSource', Writable => 'string' },
	
	'image.metadataHref' => { Name => 'ImageMetadataHref', Writable => 'string' },
	
	'image.refid' => { Name => 'ImageRefid', Writable => 'string' },
	
	'image.href' => { Name => 'ImageHref', Writable => 'string' },
	
	'image.agentIndexed' => {
		Name =>	'ImageAgentIndexed',
		List => 'Seq',
		Struct => {
			'value' => { Writable => 'string' },
			'vocab' => { Writable => 'string' },
			'refid' => { Writable => 'string' },
			'href' => { Writable => 'string' },
		},
	},
	
	'image.description' => { Name => ImageDescription, Writable => 'string' },
	
	'image.descriptionIndexed' => {
		Name =>	'ImageDescriptionIndexed',
		List => 'Seq',
		Struct => {
			value => { Writable => 'string' },
			lang => { Writable => 'string' },
			refid => { Writable => 'string' },
			href => { Writable => 'string' },
			extent => { Writable => 'string' },
			source => { Writable => 'string' },
		},
	},
	
	'image.inscription' => { Name => ImageInscription, Writable => 'string' },
	
	'image.inscriptionIndexed' => {
		Name =>	'ImageInscriptionIndexed',
		List => 'Seq',
		Struct => {
			text => { Writable => 'string' },
			textType => { Writable => 'string' },
			textSource => { Writable => 'string' },
			lang => { Writable => 'string' },
			position => { Writable => 'string' },
			extent => { Writable => 'string' },
			author => { Writable => 'string' },
			authorVocab => { Writable => 'string' },
			authorRefid => { Writable => 'string' },
			authorHref => { Writable => 'string' },
			authorSource => { Writable => 'string' },
		},
	},
	
	'image.location' => { Name => ImageLocation, Writable => 'string' },
	
	# image.locationIndexed not implemented - use IPTC location tags

	'image.relation' => { Name => ImageRelation, Writable => 'string' },
	
	'image.relationIndexed' => {
		Name =>	'ImageRelationIndexed',
		List => 'Seq',
		Struct => {
			value => { Writable => 'string' },
			type => { Writable => 'string' },
			relids => { Writable => 'string' },
			href => { Writable => 'string' },
			refid => { Writable => 'string' },
			source => { Writable => 'string' },
		},
	},
	
	'image.source' => { Name => ImageSource, Writable => 'string' },
	
	'image.sourceIndexed' => {
		Name =>	'ImageSourceIndexed',
		List => 'Seq',
		Struct => {
			extent => { Writable => 'string' },
			refid => { Writable => 'string' },
			refidType => { Writable => 'string' },
			href => { Writable => 'string' },
			value => { Writable => 'string' },
			type => { Writable => 'string' },
			nameVocab => { Writable => 'string' },
			nameRefid => { Writable => 'string' },
			nameHref => { Writable => 'string' },
		},
	},
	
	'image.subject' => { Name => ImageSubject, Writable => 'string' },
	
	'image.subjectIndexed' => {
		Name =>	'ImageSubjectIndexed',
		List => 'Seq',
		Struct => {
			value => { Writable => 'string' },
			type => { Writable => 'string' },
			lang => { Writable => 'string' },
			extent => { Writable => 'string' },
			rules => { Writable => 'string' },
			source => { Writable => 'string' },
			vocab => { Writable => 'string' },
			refid => { Writable => 'string' },
			href => { Writable => 'string' },
		},
	},

	'image.title' => { Name => ImageTitle, Writable => 'string' },
	
	'image.titleIndexed' => {
		Name =>	'ImageTitleIndexed',
		List => 'Seq',
		Struct => {
			value => { Writable => 'string' },
			type => { Writable => 'string' },
			lang => { Writable => 'string' },
			pref => { Writable => 'string' },
			relids => { Writable => 'string' },
			href => { Writable => 'string' },
			vocab => { Writable => 'string' },
			refid => { Writable => 'string' },
			source => { Writable => 'string' },
		},
	},	

	'image.worktype' => { Name => ImageWorktype, Writable => 'string' },
	
	'image.worktypeIndexed' => {
		Name =>	'ImageWorktypeIndexed',
		List => 'Seq',
		Struct => {
			value => { Writable => 'string' },
			vocab => { Writable => 'string' },
			refid => { Writable => 'string' },
			href => { Writable => 'string' },
			extent => { Writable => 'string' },
			source => { Writable => 'string' },
		},
	},
	
	# VRA custom tags(structure)
    custom1 => {
        Struct => {
            _label => { Writable => 'string' },
            data => { Writable => 'string' },
        },
    },
	
	custom2 => {
        Struct => {
            _label => { Writable => 'string' },
            data => { Writable => 'string' },
        },
    },
	
	custom3 => {
        Struct => {
            _label => { Writable => 'string' },
            data => { Writable => 'string' },
        },
    },
	
	custom4 => {
        Struct => {
            _label => { Writable => 'string' },
            data => { Writable => 'string' },
        },
    },
	
	custom5 => {
        Struct => {
            _label => { Writable => 'string' },
            data => { Writable => 'string' },
        },
    },
	
	custom6 => {
        Struct => {
            _label => { Writable => 'string' },
            data => { Writable => 'string' },
        },
    },
);